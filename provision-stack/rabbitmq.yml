---
- name: Install RabbitMQ with Erlang on Noble
  hosts: rmqsrvgrp
  become: yes
  gather_facts: yes

  tasks:

    - name: Print OS version
      debug:
        msg: "{{ ansible_distribution_release }} - {{ ansible_distribution_version }}"

    - name: Install prerequisites
      apt:
        name:
          - curl
          - gnupg
          - apt-transport-https
          - lsb-release
        state: present

    - name: Add Erlang repository key
      shell: |
        curl -fsSL https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | gpg --dearmor -o /usr/share/keyrings/erlang.gpg
      args:
        creates: /usr/share/keyrings/erlang.gpg

    - name: Add Erlang repo for jammy (works for noble)
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/erlang.gpg] https://packages.erlang-solutions.com/ubuntu jammy contrib"
        state: present
        filename: erlang
        update_cache: yes

    - name: Add RabbitMQ signing key
      shell: |
        curl -fsSL https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-server/gpg.key | gpg --dearmor -o /usr/share/keyrings/rabbitmq.gpg
      args:
        creates: /usr/share/keyrings/rabbitmq.gpg

    - name: Add RabbitMQ repo (use jammy for noble)
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/rabbitmq.gpg] https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-server/deb/ubuntu jammy main"
        state: present
        filename: rabbitmq
        update_cache: yes

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Erlang 26 and RabbitMQ
      apt:
        name:
          - erlang-base
          - erlang-asn1
          - erlang-crypto
          - erlang-eldap
          - erlang-ftp
          - erlang-inets
          - erlang-mnesia
          - erlang-os-mon
          - erlang-parsetools
          - erlang-public-key
          - erlang-runtime-tools
          - erlang-snmp
          - erlang-ssl
          - erlang-syntax-tools
          - erlang-tools
          - erlang-xmerl
          - rabbitmq-server
        state: present

    - name: Ensure RabbitMQ is started and enabled
      service:
        name: rabbitmq-server
        state: started
        enabled: yes

    - name: Configure RabbitMQ (disable loopback-only)
      copy:
        content: |
          [{rabbit, [{loopback_users, []}]}].
        dest: /etc/rabbitmq/rabbitmq.config
      notify: Restart RabbitMQ

    - name: Create RabbitMQ user
      rabbitmq_user:
        user: test
        password: test
        configure_priv: .*
        read_priv: .*
        write_priv: .*
        tags:
          - administrator
        state: present
      notify: Restart RabbitMQ

    - name: Enable management plugin
      rabbitmq_plugin:
        names: rabbitmq_management
        state: enabled
      notify: Restart RabbitMQ

  handlers:
    - name: Restart RabbitMQ
      service:
        name: rabbitmq-server
        state: restarted
